<launch>
  <arg name="average_point_cloud_topic_name" default="" />
  <arg name="min_max_hsi_topic_name" default="" />
  <arg name="camera_info" default="" />
  <arg name="extract_point_cloud_topic_name" default="" />
  <arg name="input_cloud" default="" />
  <arg name="input_image" default="" />
  <arg name="manager" default="" />
  <arg name="object_name" default="" />

  <!-- attention clipper -->
  <node name="transformable_interactive_server_$(arg object_name)"
        pkg="jsk_interactive_marker" type="transformable_server_sample">
    <rosparam subst_value="true">
      display_interactive_manipulator: true
      display_interactive_manipulator_only_selected: true
    </rosparam>
  </node>

  <node name="transformable_markers_client_$(arg object_name)"
        pkg="jsk_interactive_marker" type="transformable_markers_client.py" output="screen">
    <remap from="~server" to="transformable_interactive_server_$(arg object_name)" />
    <rosparam subst_value="true">
      config_file: $(find wrapping_melodic)/config/hiro/$(arg object_name).yaml
      config_auto_save: true
      interactive_mode: 2  # BUTTON
    </rosparam>
  </node>

  <!-- bboxes -> bbox -->
  <node name="bboxes_to_bbox_$(arg object_name)"
        pkg="jsk_pcl_ros_utils" type="bounding_box_array_to_bounding_box"
        output="screen" >
    <remap from="~input" to="transformable_markers_client_$(arg object_name)/output/boxes" />
    <rosparam>
      index: 0
    </rosparam>
  </node>

  <!-- attention_clipper -->
  <node name="bbox_attention_clipper_$(arg object_name)"
        pkg="nodelet" type="nodelet" args="load jsk_pcl/AttentionClipper $(arg manager)"
        respawn="true" >
    <remap from="~input" to="$(arg camera_info)" />
    <remap from="~input/points" to="$(arg input_cloud)" />
    <remap from="~input/box" to="bboxes_to_bbox_$(arg object_name)/output" />
    <rosparam>
      <!-- frame_id: tape_stand -->
      use_multiple_attention: false
    </rosparam>
  </node>

  <!-- extract indices -->
  <node name="bbox_cloud_extract_$(arg object_name)"
        pkg="nodelet" type="nodelet" args="load jsk_pcl/ExtractIndices $(arg manager)"
        output="screen" >
    <remap from="~input" to="$(arg input_cloud)" />
    <remap from="~indices" to="bbox_attention_clipper_$(arg object_name)/output/point_indices" />
    <rosparam>
      keep_organized: true
      approximate_sync: true
      max_queue_size: 100
    </rosparam>
  </node>

  <!-- save pcd -->
  <arg name="input_cloud_pcd" value="/bbox_cloud_extract_$(arg object_name)/output" />
  <node name="pointcloud_to_pcd_$(arg object_name)" type="nodelet" pkg="nodelet"
        args="load jsk_pcl_utils/PointCloudToPCD $(arg manager)" output="screen" >
    <remap from="~input" to="$(arg input_cloud_pcd)" />
    <rosparam subst_value="true">
      prefix: $(find wrapping_melodic)/save_pcd/tape/
      duration: 0.0
      binary: false
      compressed: false
    </rosparam>
  </node>

  <!-- average pointcloud -->
  <node name="average_point_cloud_$(arg object_name)" type="detect_tape" pkg="wrapping_melodic" output="screen" >
    <param name="extract_point_cloud_topic" value="$(arg extract_point_cloud_topic_name)"/>
    <param name="average_point_cloud_topic" value="$(arg average_point_cloud_topic_name)"/>
    <param name="min_max_hsi_topic" value="$(arg min_max_hsi_topic_name)"/>
  </node>
</launch>
