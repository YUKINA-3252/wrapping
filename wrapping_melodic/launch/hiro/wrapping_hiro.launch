<launch>

  <machine name="localhost" address="localhost" />
  <arg name="machine" default="localhost" />
  <arg name="launch_manager" default="true" />

  <node pkg="nodelet" type="nodelet" name="remote_manager" args="manager"
        machine="$(arg machine)" if="$(arg launch_manager)"
        output="screen" />

  <!-- Publish topic for a remote PC -->
  <arg name="manager" default="remote_manager" />
  <arg name="RGB_CAMERA_INFO_D435" default="/realsense/color/camera_info" />
  <arg name="RGB_CAMERA_INFO_HEAD" default="/head_camera/rgb/camera_info" />
  <arg name="RGB_IMAGE_D435" default="/realsense/color/image_rect_color" />
  <arg name="RGB_IMAGE_HEAD" default="/head_camera/rgb/image_rect_color" />
  <arg name="RGB_REMOTE_IMAGE_D435" default="/realsense_remote/coior/image_rect_color" />
  <arg name="RGB_REMOTE_IMAGE_HEAD" default="/head_camera_remote/rgb/image_rect_color" />
  <!-- <arg name="DEPTH_CAMERA_INFO" default="/realsense_torso/depth/compressed/camera_info" /> -->
  <arg name="DEPTH_CAMERA_INFO_D435" default="/realsense/aligned_depth_to_color/camera_info" />
  <arg name="DEPTH_CAMERA_INFO_HEAD" default="/head_camera/depth_registered/sw_registered/camera_info" />
  <arg name="DEPTH_IMAGE_D435" default="/realsense/aligned_depth_to_color/image_raw" />
  <arg name="DEPTH_IMAGE_HEAD" default="/head_camera/depth_registered/sw_registered/image_rect_raw" />
  <arg name="DEPTH_REMOTE_IMAGE_D435" default="/realsense_remote/depth/image_rect_raw" />
  <arg name="DEPTH_REMOTE_IMAGE_HEAD" default="/head_camera_remote/depth/image_rect_raw" />
  <arg name="CLOUD_D435" default="/realsense_remote/depth_registered/points" />
  <arg name="CLOUD_HEAD" default="/head_camera_remote/depth_registered/points" />

  <node name="rgb_decompress_d435" pkg="image_transport" type="republish"
        args="compressed in:=$(arg RGB_IMAGE_D435) out:=$(arg RGB_REMOTE_IMAGE_D435)" />
  <node name="rgb_decompress_head" pkg="image_transport" type="republish"
        args="compressed in:=$(arg RGB_IMAGE_HEAD) out:=$(arg RGB_REMOTE_IMAGE_HEAD)" />
  <node name="depth_decompress_d435" pkg="image_transport" type="republish"
        args="compressedDepth in:=$(arg DEPTH_IMAGE_D435) out:=$(arg DEPTH_REMOTE_IMAGE_D435)" />
  <node name="depth_decompress_head" pkg="image_transport" type="republish"
        args="compressedDepth in:=$(arg DEPTH_IMAGE_HEAD) out:=$(arg DEPTH_REMOTE_IMAGE_HEAD)" />
  <node pkg="nodelet" type="nodelet" name="point_cloud_xyzrgb_d435"
        args="load depth_image_proc/point_cloud_xyzrgb $(arg manager)" output="screen" >
    <remap from="rgb/camera_info" to="$(arg RGB_CAMERA_INFO_D435)" />
    <remap from="rgb/image_rect_color" to="$(arg RGB_REMOTE_IMAGE_D435)" />
    <remap from="depth_registered/image_rect" to="$(arg DEPTH_REMOTE_IMAGE_D435)" />
    <remap from="depth_registered/points" to="$(arg CLOUD_D435)" />
    <rosparam>
      queue_size: 100
    </rosparam>
  </node>
  <node pkg="nodelet" type="nodelet" name="point_cloud_xyzrgb_head"
        args="load depth_image_proc/point_cloud_xyzrgb $(arg manager)" output="screen" >
    <remap from="rgb/camera_info" to="$(arg RGB_CAMERA_INFO_HEAD)" />
    <remap from="rgb/image_rect_color" to="$(arg RGB_REMOTE_IMAGE_HEAD)" />
    <remap from="depth_registered/image_rect" to="$(arg DEPTH_REMOTE_IMAGE_HEAD)" />
    <remap from="depth_registered/points" to="$(arg CLOUD_HEAD)" />
    <rosparam>
      queue_size: 100
    </rosparam>
  </node>

  <!-- Launching a remote launch -->
  <arg name="launch_tabletop_detector" default="true" />

  <include file="$(find wrapping_melodic)/launch/hiro/hiro_remote.launch">
    <arg name="camera_ns" default="realsense" />
    <arg name="camera_type" default="d435" />
    <arg name="color" default="color" />
    <arg name="launch_tabletop_detector" value="$(arg launch_tabletop_detector)" />
  </include>

  <include file="$(find wrapping_melodic)/launch/hiro/hiro_remote.launch">
    <arg name="camera_ns" value="head_camera" />
    <arg name="camera_type" value="head" />
    <arg name="color" value="rgb" />
    <arg name="launch_tabletop_detector" value="$(arg launch_tabletop_detector)" />
  </include>

  <arg name="INPUT" value="/bbox_cloud_extract_d435/output" />
  <node name="pointcloud_to_pcd" type="nodelet" pkg="nodelet"
        args="load jsk_pcl_utils/PointCloudToPCD $(arg manager)" output="screen" >
    <remap from="~input" to="$(arg INPUT)" />
    <rosparam subst_value="true">
      prefix: $(find wrapping_melodic)/save_pcd/sample_pcd_
      duration: 0.0
      binary: false
      compressed: false
    </rosparam>
  </node>
</launch>
